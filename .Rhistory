rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
y_hmm_simu
set.seed(1234)
# Define DGP of AR process
mdl_ar <- list(n     = 500,
mu    = 5,
sigma = 2,
phi   = c(0.5,0.2))
# Simulate process using simuAR() function
y_simu <- simuAR(mdl_ar)
y_simu
set.seed(1234)
# ----- Univariate ----- #
# Define DGP
mdl_hmm <- list(n     = 1000,
q     = 1,
mu    = as.matrix(c(5,-2)),
sigma = list(as.matrix(5.0),
as.matrix(7.0)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_hmm_mdl <- HMmdl(y_hmm_simu$y, k = 2, control)
y_hmm_mdl
# ----- Multivariate normal process ----- #
# Define DGP
mdl_hmm <- list(n     = 500,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_hmm_mdl <- HMmdl(y_hmm_simu$y, k = 2, control)
y_hmm_mdl
# --------------------------- Use simulated process ----------------------------
set.seed(1234)
# Define DGP of MS AR process
mdl_ms2 <- list(n     = 200,
mu    = c(5,10),
sigma = c(1,4),
phi   = c(0.5),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSAR() function
y_ms_simu <- simuMSAR(mdl_ms2)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
ms_mdl <- MSARmdl(y_ms_simu$y, p = 1, k = 2, control)
ms_mdl
set.seed(123)
# Define DGP of MS VAR process
mdl_msvar2 <- list(n     = 200,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSVAR() function
y_msvar_simu <- simuMSVAR(mdl_msvar2)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_msvar_mdl <- MSVARmdl(y_msvar_simu$y, p = 1, k = 2, control)
y_msvar_mdl
set.seed(1234)
# ----- Univariate ----- #
# Define DGP
mdl_norm <- list(n     = 1000,
q     = 1,
mu    = as.matrix(5),
sigma = as.matrix(5.0))
# Simulate process using simuNorm() function
y_norm_simu <- simuNorm(mdl_norm)
# estimate parameters
y_norm_mdl <- Nmdl(y_norm_simu$y)
y_norm_mdl
# ----- Multivariate ----- #
# Define DGP
mdl_norm <- list(n     = 1000,
q     = 2,
mu    = c(5, -2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)))
# Simulate process using simuNorm() function
y_norm_simu <- simuNorm(mdl_norm)
# estimate parameters
y_norm_mdl <- Nmdl(y_norm_simu$y)
y_norm_mdl
set.seed(1234)
# load data used in Hamilton 1989 and extended data used in CHP 2014
y84 <- as.matrix(hamilton84GNP$GNP_logdiff)
y10 <- as.matrix(chp10GNP$GNP_logdiff)
# Set test procedure options
mmc_control <- list(N = 99,
simdist_N = 10000,
getSE = TRUE,
eps = 0.0000001,
CI_union = TRUE,
lambda = 100,
stationary_ind = TRUE,
optim_type = "GenSA",
silence = FALSE,
threshold_stop = 1,
type_control = list(maxit = 200))
# perform test on Hamilton 1989 data
mmc_gnp84 <- DLMMCTest(y84, p = 4, control = mmc_control)
mmc_gnp84
# perform test on extended data used in Carrasco, Hu & Ploberger 2014 & Dufour & Luger 2017
mmc_gnp10 <- DLMMCTest(y10, p = 4, control = mmc_control)
mmc_gnp10
set.seed(1234)
# load data used in Hamilton 1989 and extended data used in CHP 2014
y84 <- as.matrix(hamilton84GNP$GNP_logdiff)
y10 <- as.matrix(chp10GNP$GNP_logdiff)
# Set test procedure options
lmc_control = list(N = 99,
simdist_N = 10000,
getSE = TRUE)
# perform test on Hamilton 1989 data
lmc_gnp84 <- DLMCTest(y84, p = 4, control = lmc_control)
lmc_gnp84
# perform test on extended data used in CHP 2014
lmc_gnp10 <- DLMCTest(y10, p = 4, control = lmc_control)
lmc_gnp10
set.seed(1234)
# Define DGP of MS AR process
mdl_ms2 <- list(n     = 200,
mu    = c(5,10),
sigma = c(1,4),
phi   = c(0.5),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSAR() function
y_ms_simu <- simuMSAR(mdl_ms2)
# ------ MS-AR example ----- #
# Set test procedure options
lmc_control = list(N = 19,
burnin = 100,
converge_check = NULL,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = TRUE,
getSE  = TRUE,
method = "EM",
maxit  = 300,
use_diff_init = 1))
#mdl <- LMCLRTest(y_ms_simu$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
#mdl
mdl <- LMCLRTest(y_ms_simu$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
mdl
library(MSTest)
devtools::document()
library(MSTest)
system("gcc --version")
version
rhub::check()
list.files()
list()
list
devtols::document()
devtools::document()
library(MSTest)
devtools::check_win_devel()
set.seed(1234)
# Define DGP of AR process
mdl_ar <- list(n     = 500,
mu    = 5,
sigma = 2,
phi   = c(0.5,0.2))
# Simulate process using simuAR() function
y_simu <- simuAR(mdl_ar)
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
y_ar_mdl <- ARmdl(y_simu$y, p = 2, control)
y_ar_mdl
# ----- Bivariate VAR(1) process ----- #
set.seed(1234)
# Define DGP of VAR process
mdl_var <- list(n     = 1000,
p     = 1,
q     = 2,
mu    = c(5,-2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)))
# Simulate process using simuVAR() function
y_simu <- simuVAR(mdl_var)
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
y_var_mdl <- VARmdl(y_simu$y, p = 1, control)
y_var_mdl
set.seed(1234)
# ----- Univariate ----- #
# Define DGP
mdl_norm <- list(n     = 1000,
q     = 1,
mu    = as.matrix(5),
sigma = as.matrix(5.0))
# Simulate process using simuNorm() function
y_norm_simu <- simuNorm(mdl_norm)
# estimate parameters
y_norm_mdl <- Nmdl(y_norm_simu$y)
y_norm_mdl
# ----- Multivariate ----- #
# Define DGP
mdl_norm <- list(n     = 1000,
q     = 2,
mu    = c(5, -2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)))
# Simulate process using simuNorm() function
y_norm_simu <- simuNorm(mdl_norm)
# estimate parameters
y_norm_mdl <- Nmdl(y_norm_simu$y)
y_norm_mdl
# --------------------------- Use simulated process ----------------------------
set.seed(1234)
# Define DGP of MS AR process
mdl_ms2 <- list(n     = 200,
mu    = c(5,10),
sigma = c(1,4),
phi   = c(0.5),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSAR() function
y_ms_simu <- simuMSAR(mdl_ms2)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
ms_mdl <- MSARmdl(y_ms_simu$y, p = 1, k = 2, control)
ms_mdl
set.seed(123)
# Define DGP of MS VAR process
mdl_msvar2 <- list(n     = 200,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSVAR() function
y_msvar_simu <- simuMSVAR(mdl_msvar2)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_msvar_mdl <- MSVARmdl(y_msvar_simu$y, p = 1, k = 2, control)
y_msvar_mdl
set.seed(1234)
# ----- Univariate ----- #
# Define DGP
mdl_hmm <- list(n     = 1000,
q     = 1,
mu    = as.matrix(c(5,-2)),
sigma = list(as.matrix(5.0),
as.matrix(7.0)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_hmm_mdl <- HMmdl(y_hmm_simu$y, k = 2, control)
y_hmm_mdl
# ----- Multivariate normal process ----- #
# Define DGP
mdl_hmm <- list(n     = 500,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 1)
# Estimate model
y_hmm_mdl <- HMmdl(y_hmm_simu$y, k = 2, control)
y_hmm_mdl
set.seed(1234)
# Define DGP of AR process
mdl_ar <- list(n     = 500,
mu    = 5,
sigma = 2,
phi   = c(0.5,0.2))
# Simulate process using simuAR() function
y_simu <- simuAR(mdl_ar)
set.seed(1234)
# ----- Univariate ----- #
# Define DGP
mdl_hmm <- list(n     = 1000,
q     = 1,
mu    = as.matrix(c(5,
-2)),
sigma = list(as.matrix(5.0),
as.matrix(7.0)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
# ----- Multivariate ----- #
# Define DGP
mdl_hmm <- list(n     = 1000,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuHMM() function
y_hmm_simu <- simuHMM(mdl_hmm)
set.seed(1234)
# Define DGP of MS AR process
mdl_ms2 <- list(n     = 500,
mu    = c(5,10),
sigma = c(1,2),
phi   = c(0.5, 0.2),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSAR() function
y_ms_simu <- simuMSAR(mdl_ms2)
set.seed(1234)
# Define DGP of MS VAR process
mdl_msvar2 <- list(n     = 1000,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSVAR() function
y_msvar_simu <- simuMSVAR(mdl_msvar2)
set.seed(1234)
# Define DGP
mdl_norm <- list(n     = 1000,
q     = 2,
mu    = c(5, -2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)))
# Simulate process using simuNorm() function
y_norm_simu <- simuNorm(mdl_norm)
set.seed(1234)
# Define DGP of VAR process
mdl_3var2 <- list(n     = 1000,
p     = 2,
q     = 3,
mu    = c(5, -2, 1),
sigma = rbind(c(5.0, 1.5, 2.5),
c(1.5, 1.0, 1.5),
c(2.5, 1.5, 4.2)),
phi   = rbind(c(0.70, 0.30, 0.35,  -0.50, -0.20,   0.25),
c(0.20, 0.40, 0.35,  -0.30,  0.30,   0.25),
c(0.20, 0.30, 0.50,  -0.30, -0.20,  -0.40)))
# Simulate process using simuVAR() function
y3var2_simu <- simuVAR(mdl_3var2)
set.seed(1234)
# load data used in Hamilton 1989 and extended data used in CHP 2014
y84 <- as.matrix(hamilton84GNP$GNP_logdiff)
y10 <- as.matrix(chp10GNP$GNP_logdiff)
# Set test procedure options
lmc_control = list(N = 99,
simdist_N = 10000,
getSE = TRUE)
# perform test on Hamilton 1989 data
lmc_gnp84 <- DLMCTest(y84, p = 4, control = lmc_control)
lmc_gnp84
# perform test on extended data used in CHP 2014
lmc_gnp10 <- DLMCTest(y10, p = 4, control = lmc_control)
lmc_gnp10
set.seed(1234)
# load data used in Hamilton 1989 and extended data used in CHP 2014
y84 <- as.matrix(hamilton84GNP$GNP_logdiff)
y10 <- as.matrix(chp10GNP$GNP_logdiff)
# Set test procedure options
mmc_control <- list(N = 99,
simdist_N = 10000,
getSE = TRUE,
eps = 0.0000001,
CI_union = TRUE,
lambda = 100,
stationary_ind = TRUE,
optim_type = "GenSA",
silence = FALSE,
threshold_stop = 1,
type_control = list(maxit = 200))
# perform test on Hamilton 1989 data
mmc_gnp84 <- DLMMCTest(y84, p = 4, control = mmc_control)
mmc_gnp84
# perform test on extended data used in Carrasco, Hu & Ploberger 2014 & Dufour & Luger 2017
mmc_gnp10 <- DLMMCTest(y10, p = 4, control = mmc_control)
mmc_gnp10
set.seed(1234)
# Define DGP of MS AR process
mdl_ms2 <- list(n     = 200,
mu    = c(5,10),
sigma = c(1,4),
phi   = c(0.5),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process using simuMSAR() function
y_ms_simu <- simuMSAR(mdl_ms2)
# ------ MS-AR example ----- #
# Set test procedure options
lmc_control = list(N = 19,
burnin = 100,
converge_check = NULL,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = TRUE,
getSE  = TRUE,
method = "EM",
maxit  = 300,
use_diff_init = 1))
#mdl <- LMCLRTest(y_ms_simu$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
#mdl
mdl <- LMCLRTest(y_ms_simu$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
mdl
devtools::document()
library(MSTest)
devtools::release()
version
