simu_msar <- simuMSAR(mdl_ms)
### Simulate Markov switching Vector Autoregressive process
# Define DGP of MS VAR process
mdl_msvar <- list(n     = 500,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_msvar <- simuMSVAR(mdl_msvar)
### Simulate Hidden Markov process
# Define DGP of HMM
mdl_hmm <- list(n     = 500,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_hmm <- simuHMM(mdl_hmm)
# ==========================================================
# =========================================================== #
## Model Estimation
# =========================================================== #
### Estimate multivariate normal process
# Estimate model
mdl_est_norm <- Nmdl(simu_norm$y)
mdl_est_norm
### Estimate autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_ar <- ARmdl(simu_ar$y, p = 1, control)
mdl_est_ar
### Estimate vector autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_var <- VARmdl(simu_var$y, p = 2, control)
mdl_est_var
### Estimate Markov switching autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msar <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar
# Change estimation method
control$method <- "MLE"
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
### Estimate Markov switching vector autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msvar <- MSVARmdl(simu_msvar$y, p = 1, k = 2, control)
mdl_est_msvar
### Estimate Hidden Markov model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_hmm <- HMmdl(simu_hmm$y, k = 2, control)
mdl_est_hmm
?MSARmdl
mdl_est_msar_mle
control
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msar <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar
control$method <- "MLE"
control$mle_theta_low <- c(0,0,0.1,0.1,-0.99,0.02,0.02,0.02,0.02)
control$mle_theta_upp <- c(20,20,20,20,0.99,0.98,0.98,0.98,0.98)
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
control$method <- "MLE"
control$init_theta <- mdl_est_msar$theta
control$mle_theta_low <- c(0,0,0.1,0.1,-0.99,0.02,0.02,0.02,0.02)
control$mle_theta_upp <- c(20,20,20,20,0.99,0.98,0.98,0.98,0.98)
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
mdl_est_msar
control$method <- "MLE"
control$init_theta <- mdl_est_msar$theta
control$mle_theta_low <- c(0,0,0.1,0.1,-0.90,0.02,0.02,0.02,0.02)
control$mle_theta_upp <- c(20,20,20,20,0.90,0.98,0.98,0.98,0.98)
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
warnings()
?MSVARmdl
?LMCLRTest
?MMCLRTest
st <- proc.time()
## Package and options
library("MSTest")
library("foreach")
library("doParallel")
options(prompt = "R> ", continue = "+  ", width = 70,
useFancyQuotes = FALSE)
set.seed(250493)
# =========================================================== #
## Data
# =========================================================== #
data("hamilton84GNP", package = "MSTest")
data("chp10GNP", package = "MSTest")
data("USGNP", package = "MSTest")
# =========================================================== #
## Simulation
# =========================================================== #
### Simulate Multivariate Normal process
# Define DGP of multivariate normal process
mdl_norm <- list(n     = 500,
q     = 2,
mu    = c(5, -2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)))
# Simulate process
simu_norm <- simuNorm(mdl_norm)
### Simulate Autoregressive process
# Define DGP of AR(2) process
mdl_ar <- list(n     = 500,
mu    = 5,
sigma = 2,
phi   = c(0.75))
# Simulate process
simu_ar <- simuAR(mdl_ar)
### Simulate Vector Autoregressive process
# Define DGP of VAR(2) process
mdl_var <- list(n     = 500,
p     = 2,
q     = 3,
mu    = c(5, -2, 1),
sigma = rbind(c(5.0, 1.5, 2.5),
c(1.5, 1.0, 1.5),
c(2.5, 1.5, 4.2)),
phi   = rbind(c(0.70, 0.30, 0.35,  -0.50, -0.20,   0.25),
c(0.20, 0.40, 0.35,  -0.30,  0.30,   0.25),
c(0.20, 0.30, 0.50,  -0.30, -0.20,  -0.40)))
# Simulate process
simu_var <- simuVAR(mdl_var)
### Simulate Markov switching Autoregressive process
# Define DGP of MS AR process
mdl_ms <- list(n     = 500,
mu    = c(5,10),
sigma = c(1,2),
phi   = c(0.75),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_msar <- simuMSAR(mdl_ms)
### Simulate Markov switching Vector Autoregressive process
# Define DGP of MS VAR process
mdl_msvar <- list(n     = 500,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_msvar <- simuMSVAR(mdl_msvar)
### Simulate Hidden Markov process
# Define DGP of HMM
mdl_hmm <- list(n     = 500,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_hmm <- simuHMM(mdl_hmm)
# =========================================================== #
## Model Estimation
# =========================================================== #
### Estimate multivariate normal process
# Estimate model
mdl_est_norm <- Nmdl(simu_norm$y)
mdl_est_norm
### Estimate autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_ar <- ARmdl(simu_ar$y, p = 1, control)
mdl_est_ar
### Estimate vector autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_var <- VARmdl(simu_var$y, p = 2, control)
mdl_est_var
### Estimate Markov switching autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msar <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar
# Change estimation method
control$method <- "MLE"
control$init_theta <- mdl_est_msar$theta
control$mle_theta_low <- c(0,0,0.1,0.1,-0.90,0.02,0.02,0.02,0.02)
control$mle_theta_upp <- c(20,20,20,20,0.90,0.98,0.98,0.98,0.98)
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
### Estimate Markov switching vector autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msvar <- MSVARmdl(simu_msvar$y, p = 1, k = 2, control)
mdl_est_msvar
### Estimate Hidden Markov model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_hmm <- HMmdl(simu_hmm$y, k = 2, control)
mdl_est_hmm
# =========================================================== #
## Hypothesis Testing
# =========================================================== #
### Test Markov switching vector autoregressive model using Rodriguez-Rondon & Dufour (2023) LMC-LRT
# Set options for testing procedure
lmc_control = list(N = 99,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = TRUE,
getSE  = TRUE,
method = "EM",
use_diff_init = 10),
use_diff_init_sim = 5)
# Perform Rodriguez-Rondon & Dufour (2023) LMC-LRT
lmclrt <- LMCLRTest(simu_msar$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
set.seed(250493)
# =========================================================== #
## Data
# =========================================================== #
data("hamilton84GNP", package = "MSTest")
data("chp10GNP", package = "MSTest")
data("USGNP", package = "MSTest")
# =========================================================== #
## Simulation
# =========================================================== #
### Simulate Multivariate Normal process
# Define DGP of multivariate normal process
mdl_norm <- list(n     = 500,
q     = 2,
mu    = c(5, -2),
sigma = rbind(c(5.0, 1.5),
c(1.5, 1.0)))
# Simulate process
simu_norm <- simuNorm(mdl_norm)
### Simulate Autoregressive process
# Define DGP of AR(2) process
mdl_ar <- list(n     = 500,
mu    = 5,
sigma = 2,
phi   = c(0.75))
# Simulate process
simu_ar <- simuAR(mdl_ar)
### Simulate Vector Autoregressive process
# Define DGP of VAR(2) process
mdl_var <- list(n     = 500,
p     = 2,
q     = 3,
mu    = c(5, -2, 1),
sigma = rbind(c(5.0, 1.5, 2.5),
c(1.5, 1.0, 1.5),
c(2.5, 1.5, 4.2)),
phi   = rbind(c(0.70, 0.30, 0.35,  -0.50, -0.20,   0.25),
c(0.20, 0.40, 0.35,  -0.30,  0.30,   0.25),
c(0.20, 0.30, 0.50,  -0.30, -0.20,  -0.40)))
# Simulate process
simu_var <- simuVAR(mdl_var)
### Simulate Markov switching Autoregressive process
# Define DGP of MS AR process
mdl_ms <- list(n     = 500,
mu    = c(5,10),
sigma = c(1,2),
phi   = c(0.75),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_msar <- simuMSAR(mdl_ms)
### Simulate Markov switching Vector Autoregressive process
# Define DGP of MS VAR process
mdl_msvar <- list(n     = 500,
p     = 1,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
phi   = rbind(c(0.50, 0.30),
c(0.20, 0.70)),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_msvar <- simuMSVAR(mdl_msvar)
### Simulate Hidden Markov process
# Define DGP of HMM
mdl_hmm <- list(n     = 500,
q     = 2,
mu    = rbind(c(5, -2),
c(10, 2)),
sigma = list(rbind(c(5.0, 1.5),
c(1.5, 1.0)),
rbind(c(7.0, 3.0),
c(3.0, 2.0))),
k     = 2,
P     = rbind(c(0.90, 0.10),
c(0.10, 0.90)))
# Simulate process
simu_hmm <- simuHMM(mdl_hmm)
# =========================================================== #
## Model Estimation
# =========================================================== #
### Estimate multivariate normal process
# Estimate model
mdl_est_norm <- Nmdl(simu_norm$y)
mdl_est_norm
### Estimate autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_ar <- ARmdl(simu_ar$y, p = 1, control)
mdl_est_ar
### Estimate vector autoregressive model
# Set options for model estimation
control <- list(const  = TRUE,
getSE  = TRUE)
# Estimate model
mdl_est_var <- VARmdl(simu_var$y, p = 2, control)
mdl_est_var
### Estimate Markov switching autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msar <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar
# Change estimation method
control$method <- "MLE"
control$init_theta <- mdl_est_msar$theta
control$mle_theta_low <- c(0,0,0.1,0.1,-0.90,0.02,0.02,0.02,0.02)
control$mle_theta_upp <- c(20,20,20,20,0.90,0.98,0.98,0.98,0.98)
# Estimate model
mdl_est_msar_mle <- MSARmdl(simu_msar$y, p = 1, k = 2, control)
mdl_est_msar_mle
### Estimate Markov switching vector autoregressive model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_msvar <- MSVARmdl(simu_msvar$y, p = 1, k = 2, control)
mdl_est_msvar
### Estimate Hidden Markov model
# Set options for model estimation
control <- list(msmu   = TRUE,
msvar  = TRUE,
method = "EM",
use_diff_init = 10)
# Estimate model
mdl_est_hmm <- HMmdl(simu_hmm$y, k = 2, control)
mdl_est_hmm
st <- proc.time()
### Test Markov switching vector autoregressive model using Rodriguez-Rondon & Dufour (2023) LMC-LRT
# Set options for testing procedure
lmc_control = list(N = 99,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = TRUE,
getSE  = TRUE,
method = "EM",
use_diff_init = 10),
use_diff_init_sim = 5)
# Perform Rodriguez-Rondon & Dufour (2023) LMC-LRT
lmclrt <- LMCLRTest(simu_msar$y, p = 1, k0 = 1 , k1 = 2, lmc_control)
lmclrt
### Test Hidden Markov model using Rodriguez-Rondon & Dufour (2023) MMC-LRT
# Set options for testing procedure
mmc_control = list(N = 99,
eps = 0.3,
threshold_stop = 0.05 + 1e-6, # stop once we fail to reject test
type = "pso",
workers  = 11,
CI_union = FALSE,
phi_low = -0.99,
phi_upp = 0.99,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = TRUE,
getSE  = TRUE,
method = "EM"),
type_control   = list(maxit  = 100,
maxf   = 1000))
# start cluster
doParallel::registerDoParallel(mmc_control$workers)
# Perform Rodriguez-Rondon & Dufour (2023) MMC-LRT
mmclrt <- MMCLRTest(simu_ar$y, p = 1, k0 = 1 , k1 = 2, mmc_control)
mmclrt
# stop cluster
doParallel::stopImplicitCluster()
### Test Markov switching autoregressive model using Dufour & Luger (2017) LMC test
# Set options for testing procedure
lmc_control = list(N = 99,
simdist_N = 10000,
getSE = TRUE)
# Perform Dufour & Luger (2017) LMC test
lmcmoment <- DLMCTest(simu_msar$y, p = 1, control = lmc_control)
lmcmoment
### Test autoregressive model using Dufour & Luger (2017) MMC test
# Set options for testing procedure
mmc_control <- list(N = 99,
getSE = TRUE,
eps = 0.0000001, # set to small value so that only CI is used
CI_union = TRUE,
phi_low = -0.99,
phi_upp = 0.99,
optim_type = "GenSA",
threshold_stop = 0.05 + 1e-6, # stop once we fail to reject test
type_control = list(maxit = 300))
# Perform Dufour & Luger (2017) MMC test
mmcmoment <- DLMMCTest(simu_msar$y, p = 1, control = mmc_control)
mmcmoment
### Test Markov switching autoregressive model using Carrasco, Hu, & Ploberger (2014) test
# Set options for testing procedure
chp_control = list(N = 1000,
rho_b = 0.7,
msvar = TRUE)
# Perform Carrasco, Hu, & Ploberger (2014) test
pstabilitytest <- CHPTest(simu_ar$y, p = 1, control = chp_control)
pstabilitytest
### Test Markov switching autoregressive model using Hansen (1992) LRT
# Set options for testing procedure
hlrt_control  <- list(ix          = 1,
msvar       = TRUE,
gridsize    = 5,
p_gridsize  = 9,
p_stepsize  = 0.1,
mugrid_from = 0,
mugrid_by   = 1)
# Perform Hansen (1992) likelihood ratio test
hlrt <- HLRTest(simu_msar$y, p = 1, control = hlrt_control)
hlrt
end <- proc.time() - st
end
