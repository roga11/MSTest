file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_var) <- colname_ls
Percentile_MomentLMC_power_var[,1:12]
Percentile_MomentLMC_power_var[,13:24]
Percentile_MomentLMC_power_mean_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_mean_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_mean_var_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_mean_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_mean_var) <- colname_ls
Percentile_MomentLMC_power_mean_var[,1:12]
Percentile_MomentLMC_power_mean_var[,13:24]
h0<-1
h1<-3
# Local Monte Carlo Percentile Moment-based Size Results
Percentile_MomentLMC_power_mean <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_mean) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_mean_only_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_mean[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_mean) <- colname_ls
Percentile_MomentLMC_power_mean[,1:12]
Percentile_MomentLMC_power_mean[,13:24]
Percentile_MomentLMC_power_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_var) <- colname_ls
Percentile_MomentLMC_power_var[,1:12]
Percentile_MomentLMC_power_var[,13:24]
Percentile_MomentLMC_power_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_var_only_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_var) <- colname_ls
Percentile_MomentLMC_power_var[,1:12]
Percentile_MomentLMC_power_var[,13:24]
Percentile_MomentLMC_power_mean_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_mean_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_mean_var_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_mean_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_mean_var) <- colname_ls
Percentile_MomentLMC_power_mean_var[,1:12]
Percentile_MomentLMC_power_mean_var[,13:24]
h0<-2
h1<-3
Percentile_MomentLMC_power_mean <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_mean) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_mean_only_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_mean[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_mean) <- colname_ls
Percentile_MomentLMC_power_mean[,1:12]
Percentile_MomentLMC_power_mean[,13:24]
Percentile_MomentLMC_power_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_var_only_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_var) <- colname_ls
Percentile_MomentLMC_power_var[,1:12]
Percentile_MomentLMC_power_var[,13:24]
Percentile_MomentLMC_power_mean_var <- matrix(0,2,nrow(combined_list))
rownames(Percentile_MomentLMC_power_mean_var) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('Percentile_MomentLMC_simulation_results_power_of_test_change_mean_var_p22_p33_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Percentile_MomentLMC_power_mean_var[,xi] <- c((sum(sim_res$PLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$PLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(Percentile_MomentLMC_power_mean_var) <- colname_ls
Percentile_MomentLMC_power_mean_var[,1:12]
Percentile_MomentLMC_power_mean_var[,13:24]
# ====================================================================
# ====== Dependencies
# ====================================================================
library(MSTest)
library(foreach)
library(doParallel)
# ====================================================================
# ====== Set Directory for results
# ====================================================================
setwd("/Users/grodriguezrondon/Dropbox/Res/structural_break/MC_LRT/sim_res")
# ====================================================================
# ====== Params
# ====================================================================
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
N <- 99
Nsim <- 1000
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1 <- 2
k0 <- 1
msmu <- TRUE
msvar <- TRUE
# ====================================================================
# ====== Model
# ====================================================================
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
# ------------- Model
ar_mdl_k1[["n"]] <- n
ar_mdl_k1[["phi"]] <- phi
# ------------- File name and columns titles
file_name <-paste0('LMC_LRT_simulation_results_size_of_test_h0_',k0,'_h1_',k1,'_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","Attempts,","TimeSpent,","LMC_LRT_Pvalue")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
LRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while(is.null(LRTest_out)) {
y_out <- simuAR(ar_mdl_k1)
attempt <- attempt + 1
try(
LRTest_out <- LR_MCTest(y_out$y, ar, k0, k1, msmu, msvar, N = N, maxit = 300, thtol = 1e-6)
)
}
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',attempt,',',endT[3],',',LRTest_out$pval)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
# ====================================================================
# ====== Dependencies
# ====================================================================
library(MSTest)
library(foreach)
library(doParallel)
# ====================================================================
# ====== Set Directory for results
# ====================================================================
setwd("/Users/grodriguezrondon/Dropbox/Res/structural_break/MC_LRT/sim_res")
# ====================================================================
# ====== Params
# ====================================================================
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
N <- 99
Nsim <- 1000
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1 <- 3
k0 <- 1
msmu <- TRUE
msvar <- TRUE
# ====================================================================
# ====== Model
# ====================================================================
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
# ------------- Model
ar_mdl_k1[["n"]] <- n
ar_mdl_k1[["phi"]] <- phi
# ------------- File name and columns titles
file_name <-paste0('LMC_LRT_simulation_results_size_of_test_h0_',k0,'_h1_',k1,'_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","Attempts,","TimeSpent,","LMC_LRT_Pvalue")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
LRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while(is.null(LRTest_out)) {
y_out <- simuAR(ar_mdl_k1)
attempt <- attempt + 1
try(
LRTest_out <- LR_MCTest(y_out$y, ar, k0, k1, msmu, msvar, N = N, maxit = 300, thtol = 1e-6)
)
}
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',attempt,',',endT[3],',',LRTest_out$pval)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
setwd("/Users/grodriguezrondon/Dropbox/Res/structural_break/MC_LRT/sim_res")
# Parameters used
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
P22_ls <- c(0.90, 0.50)
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
h0<-1
h1<-2
xi=1
Boot_LRT_size <- matrix(0,1,12)
n <- combined_list[xi,1]
n
phi <- combined_list[xi,2]
phi
file_name <- paste0('Bootstrap_LRT_simulation_results_size_of_test_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
file_name
sim_res <- read.table(file_name, header = TRUE, sep = ",")
sim_res
N <- nrow(sim_res)
N
(sum(sim_res$Boot_LRT_Pvalue<0.05)/N)*100
(sum(sim_res$Boot_LRT_Pvalue<=0.05)/N)*100
Boot_LRT_size[,xi] <- (sum(sim_res$Boot_LRT_Pvalue<=0.05)/N)*100
Boot_LRT_size
Boot_LRT_size <- matrix(0,1,12)
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
file_name <- paste0('Bootstrap_LRT_simulation_results_size_of_test_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
Boot_LRT_size[,xi] <- (sum(sim_res$Boot_LRT_Pvalue<=0.05)/N)*100
}
xi
Boot_LRT_size
combined_list
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
B <- 1000
Nsim <- 1000
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1 <- c(2,3)
k0 <- c(1,2)
msmu <- TRUE
msvar <- TRUE
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
k1_ls <- c(2,3)
k0_ls <- c(1,2)
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$k0 <- k0_ls
nphi_ls$k1 <- k1_ls
combined_list <- expand.grid(nphi_ls)
combined_list
combined_list[,3:4]
combined_list[,3]!=combined_list[,3]
combined_list[combined_list[,3]!=combined_list[,3],]
combined_list[combined_list[,3]!=combined_list[,4],]
as.matrix(combined_list[combined_list[,3]!=combined_list[,4],])
matrix(combined_list[combined_list[,3]!=combined_list[,4],])
combined_list
rowname(combined_list)
rownames(combined_list)
rownames(combined_list) <-NULL
combined_list
combined_list[combined_list[,3]!=combined_list[,4],]
combined_list <- combined_list[combined_list[,3]!=combined_list[,4],]
combined_list
rownames(combined_list) <-NULL
combined_list
k0 <- combined_list[i,3]
i=1
n <- combined_list[i,1]
phi <- combined_list[i,2]
k0 <- combined_list[i,3]
k1 <- combined_list[i,4]
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
B <- 1000
Nsim <- 1000
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1_ls <- c(2,3)
k0_ls <- c(1,2)
msmu <- TRUE
msvar <- TRUE
# ====================================================================
# ====== Model
# ====================================================================
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$k0 <- k0_ls
nphi_ls$k1 <- k1_ls
combined_list <- expand.grid(nphi_ls)
combined_list <- combined_list[combined_list[,3]!=combined_list[,4],]
rownames(combined_list) <-NULL
combined_list
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
B <- 1000
Nsim <- 1000
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1_ls <- c(2,3)
k0_ls <- c(1,2)
msmu <- TRUE
msvar <- TRUE
# ====================================================================
# ====== Model
# ====================================================================
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$k0 <- k0_ls
nphi_ls$k1 <- k1_ls
combined_list <- expand.grid(nphi_ls)
combined_list <- combined_list[combined_list[,3]!=combined_list[,4],]
rownames(combined_list) <-NULL
source("~/Documents/Res/structbreak/MSTest_rpack_v2/MSTest/R/methods.R", echo=TRUE)
mu <- 0
stdev <- 1
ar <- 1
n_ls <- c(100,200,500)
phi_ls <- c(0.1, 0.9, 1)
P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
B <- 10
Nsim <- 100
# ---------------------------------------
# Size of Test H0: k=1 vs. H1: k=2
# ---------------------------------------
k1_ls <- c(2,3)
k0_ls <- 1
msmu <- TRUE
msvar <- TRUE
ar_mdl_k1 <- list()
ar_mdl_k1[["mu"]] <- mu
ar_mdl_k1[["stdev"]] <- stdev
ar_mdl_k1[["ar"]] <- ar
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$k0 <- k0_ls
nphi_ls$k1 <- k1_ls
combined_list <- expand.grid(nphi_ls)
combined_list <- combined_list[combined_list[,3]!=combined_list[,4],]
rownames(combined_list) <-NULL
combined_list
str_replace('0.1','.','')
gsub('0.1','.','')
gsub('.','','0.1')
sub('.','','0.1')
sub('.','','0.1')
sub('.','',c('0.1'))
gsub('.','',c('0.1'))
sub('.','','0.1')
sub('.',' ','0.1')
sub('. ','','0.1')
sub('0.','','0.1')
library(stringr)
stringr::str_remove('0.1','.')
01
stringr::str_remove_all('0.1','.')
stringr::str_remove('0.1','\\.')
sub('\\.','','0.1')
phi
sub('\\.','',phi)
paste0('Bootstrap_LRT_simulation_results_size_of_test_h0_',k0,'_h1_',k1,'_n_',n,'_phi_',sub('\\.','',phi),'.txt')
paste0('Bootstrap_LRT_simulation_',B,'_results_size_of_test_h0_',k0,'_h1_',k1,'_n_',n,'_phi_',sub('\\.','',phi),'.txt')
