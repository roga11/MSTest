write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
# ====================================================================
# ====== Model (*** change in mean only ***)
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,2)
ar_mdl_k2[["stdev"]] <- c(1,1)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["P"]] <- rbind(c(0.9,0.10),c(1-p22,p22))
# ------------- File name and columns titles
file_name <-paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_1_h1_2_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","TimeSpent,","DLMC_Pvalue_min,","DLMC_Pvalue_prod")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
# ====================================================================
# ====== Model (*** change in variance only ***)
# ====================================================================
msmu <- FALSE
msvar <- TRUE
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,0)
ar_mdl_k2[["stdev"]] <- c(1,2)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["P"]] <- rbind(c(0.9,0.10),c(1-p22,p22))
# ------------- File name and columns titles
file_name <-paste0('DL_MomentMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_1_h1_2_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","TimeSpent,","DLMC_Pvalue_min,","DLMC_Pvalue_prod")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
#P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
P22_ls <- c(0.90, 0.50)
N <- 99
Nsim <- 1000
# ====================================================================
# ====== Model (*** change in mean and variance ***)
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,2)
ar_mdl_k2[["stdev"]] <- c(1,2)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
k1 <- 2
k0 <- 1
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
i=1
i=13
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
p22
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
rbind(c(0.9,0.10),c(1-p22,p22))
c(0.9,0.10)
cbind(c(0.9,0.10),c(1-p22,p22))
cbind(c(0.9,0.10),c(1-p22,p22))
# ====================================================================
# ====== Dependencies
# ====================================================================
library(MSTest)
library(foreach)
library(doParallel)
# ====================================================================
# ====== Set Directory for results
# ====================================================================
setwd("/Users/grodriguezrondon/Dropbox/Res/structural_break/MC_LRT/sim_res")
# ====================================================================
# ====== Params
# ====================================================================
ar <- 1
n_ls <- c(100,200,500,1000)
phi_ls <- c(0.1, 0.9, 1)
#P2 <- rbind(c(0.90, 0.10),c(0.10, 0.90))
P22_ls <- c(0.90, 0.50)
N <- 99
Nsim <- 1000
# ====================================================================
# ====== Model (*** change in mean and variance ***)
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,2)
ar_mdl_k2[["stdev"]] <- c(1,2)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
# ====================================================================
# Size of Test H0: k=1 vs. H1: k=2
# ====================================================================
k1 <- 2
k0 <- 1
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
# ------------- File name and columns titles
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_var_p22_',p22,'_h0_1_h1_2_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","TimeSpent,","DLMC_Pvalue_min,","DLMC_Pvalue_prod")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
# ====================================================================
# ====== Model (*** change in mean only ***)
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,2)
ar_mdl_k2[["stdev"]] <- c(1,1)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
# ------------- File name and columns titles
file_name <-paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_1_h1_2_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","TimeSpent,","DLMC_Pvalue_min,","DLMC_Pvalue_prod")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
# ====================================================================
# ====== Model (*** change in variance only ***)
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["mu"]] <- c(0,0)
ar_mdl_k2[["stdev"]] <- c(1,2)
ar_mdl_k2[["ar"]] <- ar
ar_mdl_k2[["k"]] <- 2
# ====================================================================
# ====== Parallel Loop
# ====================================================================
nphi_ls <- list()
nphi_ls$n <- n_ls
nphi_ls$phi <- phi_ls
nphi_ls$P22_ls <-P22_ls
combined_list <- expand.grid(nphi_ls)
# ------------- Set up clusters
cores=detectCores()
cl <- makeCluster(min(c(cores[1]-2,nrow(combined_list))))
registerDoParallel(cl)
# ------------- Set Seed
finalMatrix <- foreach(i=1:nrow(combined_list)) %dopar% {
# ------------- load functions in environment
library(MSTest)
# ------------- parameter values for this loop
n <- combined_list[i,1]
phi <- combined_list[i,2]
p22 <- combined_list[i,3]
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
# ------------- File name and columns titles
file_name <-paste0('DL_MomentMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_1_h1_2_n_',n,'_phi_',phi,'.txt')
res_line <- paste0("Iteration,","TimeSpent,","DLMC_Pvalue_min,","DLMC_Pvalue_prod")
write(res_line,file = file_name,append=TRUE)
# ------------- Begin looping
for (xi in 1:Nsim){
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2, type = "markov")
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99)
endT <- proc.time()-startT
# ------------- Save results
res_line <- paste0(xi,',',endT[3],',',DLMCTest_out_2_12$`p-value_min`,',',DLMCTest_out_2_12$`p-value_prod`)
write(res_line, file = file_name, append = TRUE)
}
}
#stop cluster
stopCluster(cl)
DL_MomentMC_power_mean <- matrix(0,2,12)
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
}
DL_MomentMC_power_mean
h0<-1
h1<-2
DL_MomentMC_power_mean <- matrix(0,2,12)
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
}
DL_MomentMC_power_mean
DL_MomentMC_power_mean <- matrix(0,2,12)
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_0.9_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
}
DL_MomentMC_power_mean
paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_0.9_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_0.9_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
sim_res
N <- nrow(sim_res)
N
c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
DL_MomentMC_power_mean[,xi]
xi
nrow(combined_list)
DL_MomentMC_power_mean_p22_90 <- matrix(0,2,12)
DL_MomentMC_power_mean_p22_50 <- matrix(0,2,12)
nrow(combined_list)
combined_list
DL_MomentMC_power_mean_p22_90 <- matrix(0,2,12)
DL_MomentMC_power_mean_p22_50 <- matrix(0,2,12)
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
if (p22==0.9){
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_0.9_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean_p22_90[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
}else if (p22 ==0.5){
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_0.5_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean_p22_50[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
}
}
xi
DL_MomentMC_power_mean_p22_90
p22 <- combined_list[xi,3]
p22
(p22==0.9)
else if (p22 ==0.5)
(p22 ==0.5)
paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
DL_MomentMC_power_mean <- matrix(0,2,nrow(combined_list))
colnames(DL_MomentMC_power_mean[,xi])
colnames(DL_MomentMC_power_mean[,xi])
paste0('n=',n,' & ', 'phi=',phi)
DL_MomentMC_power_mean[,xi]
DL_MomentMC_power_mean <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('PLMC_min','PLMC_prod')
DL_MomentMC_power_mean
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
colnames(DL_MomentMC_power_mean[,xi]) <- paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22)
}
xi
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22)
DL_MomentMC_power_mean[,xi]
colnames(DL_MomentMC_power_mean[1,xi]) <- paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22)
colname_ls <- list()
colname_ls <- c()
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
colname_ls
DL_MomentMC_power_mean <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(DL_MomentMC_power_mean) <- colname_ls
DL_MomentMC_power_mean
DL_MomentMC_power_mean
DL_MomentMC_power_mean[:,1:12]
DL_MomentMC_power_mean[,1:12]
DL_MomentMC_power_mean[,13:24]
cbind(c(0.9,0.10),c(1-p22,p22))
DL_MomentMC_power_mean <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('PLMC_min','PLMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<=0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<=0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(DL_MomentMC_power_mean) <- colname_ls
DL_MomentMC_power_mean[,1:12]
DL_MomentMC_power_mean[,13:24]
DL_MomentMC_power_var <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('LMC_min','LMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_var[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(DL_MomentMC_power_var) <- colname_ls
DL_MomentMC_power_var[,1:12]
DL_MomentMC_power_var[,13:24]
combined_list
DL_MomentMC_power_var <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('LMC_min','LMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_var_only_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_var[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(DL_MomentMC_power_var) <- colname_ls
DL_MomentMC_power_var[,1:12]
DL_MomentMC_power_var[,13:24]
DL_MomentMC_power_mean_var <- matrix(0,2,nrow(combined_list))
rownames(DL_MomentMC_power_mean) <- c('LMC_min','LMC_prod')
colname_ls <- c()
for (xi in 1:nrow(combined_list)){
n <- combined_list[xi,1]
phi <- combined_list[xi,2]
p22 <- combined_list[xi,3]
file_name <- paste0('DL_MomentMC_simulation_results_power_of_test_change_mean_var_p22_',p22,'_h0_',h0,'_h1_',h1,'_n_',n,'_phi_',phi,'.txt')
sim_res <- read.table(file_name, header = TRUE, sep = ",")
N <- nrow(sim_res)
DL_MomentMC_power_mean_var[,xi] <- c((sum(sim_res$DLMC_Pvalue_min<0.05)/N)*100,(sum(sim_res$DLMC_Pvalue_prod<0.05)/N)*100)
colname_ls <- c(colname_ls,paste0('n=',n,' & ', 'phi=',phi,' & ', 'p22=',p22))
}
colnames(DL_MomentMC_power_mean_var) <- colname_ls
DL_MomentMC_power_mean_var[,1:12]
DL_MomentMC_power_mean_var[,13:24]
cbind(c(0.9,0.10),c(1-p22,p22))
p22=0.9
cbind(c(0.9,0.10),c(1-p22,p22))
