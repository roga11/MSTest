mdl
end
mmc_control = list(N = 19,
burnin = 100,
converge_check = NULL,
eps = 0.000000001,
CI_union = TRUE,
silence = FALSE,
threshold_stop = 1,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = FALSE,
getSE  = TRUE,
method = "EM",
maxit  = 500,
use_diff_init = 1),
type_control = list(maxit = 50))
st <- Sys.time()
mdl <- MMCLRTest(y84, p = 4 , k0 = 1 , k1 = 2, mmc_control)
end <- Sys.time() - st
mdl
end
Nsim <- 1000
control = list(N = 99,
burnin = 100,
converge_check = NULL,
eps = 0.000000001,
CI_union = TRUE,
silence = FALSE,
threshold_stop = 1,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(msmu   = TRUE,
msvar  = FALSE,
getSE  = TRUE,
method = "EM",
maxit  = 500,
use_diff_init = 1),
type_control = list(maxit = 100))
p <- 1
n_ls <-  c(100,200)#,500)
mu_ls <- c(0,2)
stdev_ls <- c(1,2)
phi_ls <- c(0.1, 0.9, 1)
P22_ls <- c(0.90, 0.50)
N <- 99
Nsim <- 1000
ls <- list()
ls$n <- n_ls
ls$phi <- phi_ls
ls$mu_ls <- mu_ls
ls$stdev_ls <- stdev_ls
ls$P22_ls <-P22_ls
combined_list <- expand.grid(ls)
combined_list["mu_1"] = 0
combined_list["stdev_1"] = 1
combined_list <- combined_list[((combined_list["mu_ls"]==0) + (combined_list["mu_1"]==0) + (combined_list["stdev_ls"]==1) + (combined_list["stdev_1"]==1))!=4,]
row.names(combined_list) <- NULL
combined_list
k1 <- 2
k0 <- 1
ar_mdl_k2 <- list()
ar_mdl_k2[["p"]] <- p
ar_mdl_k2[["k"]] <- k1
i=1
n <- combined_list[i,1]
phi <- combined_list[i,2]
mu_1 <- combined_list[i,6]
mu_2 <- combined_list[i,3]
stdev_1 <- combined_list[i,7]
stdev_2 <- combined_list[i,4]
p22 <- combined_list[i,5]
if (phi==1){
control$stationary_ind  <- FALSE
}
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["mu"]] <- c(mu_1,mu_2)
ar_mdl_k2[["stdev"]] <- c(stdev_1,stdev_2)
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
msmu <- mu_1!=mu_2
msvar <- stdev_1!=stdev_2
file_name <-paste0('MMC_LRT_simulation_',N,'_results_eps_',ifelse(control$eps<0.001,"CI",sub('\\.','',round(control$eps,3))),'_power_of_test_h0_',k0,'_h1_',k1,
'_n_',n,'_phi_',sub('\\.','',phi),'_changeMean_',msmu,'_changeVar_',msvar,'_p22_',sub('\\.','',p22),
'_threshold_',sub('\\.','',round(control$threshold_stop,2)),'_maxiter_',control$type_control$maxit,'.txt')
file_name
res_line <- paste0("Iteration,","Attempts,","TimeSpent,","MMC_LRT_Pvalue")
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
y_out <- simuMSAR(ar_mdl_k2)
ar_mdl_k2[["sigma"]] <- c(stdev_1,stdev_2)
stdev_2
stdev_1
p <- 1
n_ls <-  c(100, 200)#,500)
mu_ls <- c(0,2)
sigma_ls <- c(1, 4)
phi_ls <- c(0.1, 0.9, 1)
P22_ls <- c(0.90, 0.50)
N <- 99
Nsim <- 1000
ls <- list()
ls$n <- n_ls
ls$phi <- phi_ls
ls$mu_ls <- mu_ls
ls$sigma_ls <- sigma_ls
ls$P22_ls <-P22_ls
combined_list <- expand.grid(ls)
combined_list["mu_1"] = 0
combined_list["sigma_1"] = 1
combined_list <- combined_list[((combined_list["mu_ls"]==0) + (combined_list["mu_1"]==0) + (combined_list["sigma_ls"]==1) + (combined_list["sigma_1"]==1))!=4,]
row.names(combined_list) <- NULL
k1 <- 2
k0 <- 1
# ====================================================================
# ====== Model
# ====================================================================
ar_mdl_k2 <- list()
ar_mdl_k2[["p"]] <- p
ar_mdl_k2[["k"]] <- k1
combined_list
n <- combined_list[i,1]
phi <- combined_list[i,2]
mu_1 <- combined_list[i,6]
mu_2 <- combined_list[i,3]
sigma_1 <- combined_list[i,7]
sigma_2 <- combined_list[i,4]
p22 <- combined_list[i,5]
if (phi==1){
control$stationary_ind  <- FALSE
}
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["mu"]] <- c(mu_1,mu_2)
ar_mdl_k2[["sigma"]] <- c(sigma_1,sigma_2)
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
msmu <- mu_1!=mu_2
msmu <- mu_1!=mu_2
msvar <- sigma_1!=sigma_2
file_name <-paste0('MMC_LRT_simulation_',N,'_results_eps_',ifelse(control$eps<0.001,"CI",sub('\\.','',round(control$eps,3))),'_power_of_test_h0_',k0,'_h1_',k1,
'_n_',n,'_phi_',sub('\\.','',phi),'_changeMean_',msmu,'_changeVar_',msvar,'_p22_',sub('\\.','',p22),
'_threshold_',sub('\\.','',round(control$threshold_stop,2)),'_maxiter_',control$type_control$maxit,'.txt')
res_line <- paste0("Iteration,","Attempts,","TimeSpent,","MMC_LRT_Pvalue")
y_out <- simuMSAR(ar_mdl_k2)
y_out$y
ar
p
k0
k1
control$mdl_h1_control$msmu <- msmu
control$mdl_h1_control$msvar <- msvar
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# Sometimes, 'pso', does not use initial values and maxit=200 is no longer large enough (need to investigate why this happens randomly)
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1) | (MMCLRTest_out$mdl_h1$iterations==control$maxit)){
MMCLRTest_out <- NULL
}
}
}
MMCLRTest_out
(is.null(MMCLRTest_out)==FALSE)
MMCLRTest_out$pval
(MMCLRTest_out$pval<0)
(MMCLRTest_out$pval>1)
MMCLRTest_out$mdl_h1$iterations
control$mdl_h1_control$maxit
(MMCLRTest_out$mdl_h1$iterations==control$mdl_h1_control$maxit)
((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1) | (MMCLRTest_out$mdl_h1$iterations==control$mdl_h1_control$maxit))
endT
endT <- proc.time()-startT
endT
MMCLRTest_out$pval
plot(y_out$y)
plot(y_out$y, type = 'l')
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# Sometimes, 'pso', does not use initial values and maxit=200 is no longer large enough (need to investigate why this happens randomly)
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1) | (MMCLRTest_out$mdl_h1$iterations==control$mdl_h1_control$maxit)){
MMCLRTest_out <- NULL
}
}
}
endT <- proc.time()-startT
endT
res_line <- paste0(xi,',',attempt,',',endT[3],',',MMCLRTest_out$pval)
xi=1
res_line <- paste0(xi,',',attempt,',',endT[3],',',MMCLRTest_out$pval)
res_line
control = list(N = 99,
burnin = 100,
converge_check = "alt",
eps = 0.000000001,
CI_union = TRUE,
silence = FALSE,
threshold_stop = 0.05 + 1e-10,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(getSE  = TRUE,
method = "EM",
maxit  = 500,
use_diff_init = 1),
type_control = list(maxit = 100))
Nsim <- 500
control = list(N = 99,
burnin = 100,
converge_check = "alt",
eps = 0.000000001,
CI_union = TRUE,
silence = FALSE,
threshold_stop = 0.05 + 1e-10,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(getSE  = TRUE,
method = "EM",
maxit  = 500,
use_diff_init = 1),
type_control = list(maxit = 100))
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# pval <0 or pval>1 should not happen but catch is in place in case. Most likley, model under
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1)){
MMCLRTest_out <- NULL
}
}
}
endT <- proc.time()-startT
res_line <- paste0(xi,',',attempt,',',endT[3],',',MMCLRTest_out$pval)
res_line
y_out <- simuMSAR(ar_mdl_k2)
i
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$$mdl_h0_control)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
control$mdl_h1_control$msmu
control$mdl_h1_control$msmu <- msmu
control$mdl_h1_control$msvar <- msvar
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
combined_list
i=13
n <- combined_list[i,1]
phi <- combined_list[i,2]
mu_1 <- combined_list[i,6]
mu_2 <- combined_list[i,3]
sigma_1 <- combined_list[i,7]
sigma_2 <- combined_list[i,4]
p22 <- combined_list[i,5]
if (phi==1){
control$stationary_ind  <- FALSE
}
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["mu"]] <- c(mu_1,mu_2)
ar_mdl_k2[["sigma"]] <- c(sigma_1,sigma_2)
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
mu_1!=mu_2
msmu <- mu_1!=mu_2
msvar <- sigma_1!=sigma_2
msvar
control$mdl_h1_control$msmu <- msmu
control$mdl_h1_control$msvar <- msvar
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
y_out <- simuMSAR(ar_mdl_k2)
mdl_h0 <- estimMdl(y_out$y, p, q, k0, control$mdl_h0_control)
mdl_h1 <- estimMdl(y_out$y, p, q, k1, control$mdl_h1_control)
mdl_h1$converged
(mdl_h1$converged==FALSE)
n <- combined_list[i,1]
phi <- combined_list[i,2]
mu_1 <- combined_list[i,6]
mu_2 <- combined_list[i,3]
sigma_1 <- combined_list[i,7]
sigma_2 <- combined_list[i,4]
p22 <- combined_list[i,5]
if (phi==1){
control$stationary_ind  <- FALSE
}
# ------------- Model
ar_mdl_k2[["n"]] <- n
ar_mdl_k2[["phi"]] <- phi
ar_mdl_k2[["mu"]] <- c(mu_1,mu_2)
ar_mdl_k2[["sigma"]] <- c(sigma_1,sigma_2)
ar_mdl_k2[["P"]] <- cbind(c(0.9,0.10),c(1-p22,p22))
msmu <- mu_1!=mu_2
msvar <- sigma_1!=sigma_2
control$mdl_h1_control$msmu <- msmu
control$mdl_h1_control$msvar <- msvar
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# pval <0 or pval>1 should not happen but catch is in place in case. Most likley, model under
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1)){
MMCLRTest_out <- NULL
}
}
}
endT <- proc.time()-startT
MMCLRTest_out$pval
i
ar_mdl_k2
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# pval <0 or pval>1 should not happen but catch is in place in case. Most likley, model under
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1)){
MMCLRTest_out <- NULL
}
}
}
endT <- proc.time()-startT
MMCLRTest_out$pval
Nsim <- 250
control = list(N = 99,
burnin = 100,
converge_check = "alt",
eps = 0.000000001,
CI_union = TRUE,
silence = FALSE,
threshold_stop = 0.05 + 1e-10,
mdl_h0_control = list(const  = TRUE,
getSE  = TRUE),
mdl_h1_control = list(getSE  = TRUE,
method = "EM",
maxit  = 500,
use_diff_init = 1),
type_control = list(maxit = 100))
MMCLRTest_out <- NULL
attempt <- 0
startT <- proc.time()
while (is.null(MMCLRTest_out)){
y_out <- simuMSAR(ar_mdl_k2)
attempt <- attempt + 1
try(
MMCLRTest_out <- MMCLRTest(y_out$y, p, k0, k1, control)
)
if (is.null(MMCLRTest_out)==FALSE){
# pval <0 or pval>1 should not happen but catch is in place in case. Most likley, model under
if ((MMCLRTest_out$pval<0) | (MMCLRTest_out$pval>1)){
MMCLRTest_out <- NULL
}
}
}
endT <- proc.time()-startT
MMCLRTest_out$pval
