


# ====== Models
n <- 500
# k =1 
mdlsimu_k1 <- list()
mdlsimu_k1[["n"]] <-n
mdlsimu_k1[["mu"]] <- 0
mdlsimu_k1[["stdev"]] <- 1
mdlsimu_k1[["phi"]] <-c(0.1)
mdlsimu_k1[["ar"]] <- 1
# k = 2
msmdlsimu_k2 <- list()
msmdlsimu_k2[["n"]] <-n
msmdlsimu_k2[["mu"]] <- c(0,2)
msmdlsimu_k2[["stdev"]] <- c(1,3)
msmdlsimu_k2[["phi"]] <-c(0.1)
msmdlsimu_k2[["ar"]] <- 1
msmdlsimu_k2[["k"]] <- 2
msmdlsimu_k2[["P"]] <- rbind(c(0.90, 0.10),c(0.10, 0.90))
# k = 3
msmdlsimu_k3 <- list()
msmdlsimu_k3[["n"]] <- n
msmdlsimu_k3[["mu"]] <- c(0,2,4)
msmdlsimu_k3[["stdev"]] <- c(1,3,5)
msmdlsimu_k3[["phi"]] <-c(0.1)
msmdlsimu_k3[["ar"]] <- 1
msmdlsimu_k3[["k"]] <- 3
msmdlsimu_k3[["P"]] <- rbind(c(0.90, 0.05,0.05),c(0.05, 0.90, 0.05), c(0.05, 0.05, 0.90))



ptm2 <- proc.time()
N <- 99
ar <- 1
msmu <- TRUE
msvar <- TRUE

# ======= Truth: 2 state - H0: 1 state vs. H1: 2 states (Should reject)
k <- 2
y_out <- simuMSAR(msmdlsimu_k2, type = "markov")

# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_2_12 = LR_MCTest(y_out$y, ar, k-1, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_2_12$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_2_12 = LR_BootTest(y_out$y, ar, k-1, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_2_12$pval
# Dufour & Luger Moment Test
ptm<- proc.time()
DLMCTest_out_2_12 <- DLMCtest(y_out$y, ar , N = 99) 
proc.time() - ptm
DLMCTest_out_2_12$`p-value_min`
DLMCTest_out_2_12$`p-value_prod`
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_2_12 <- QMCtest(y_out$y, ar, k-1, k, N = 99) 
proc.time() - ptm
QMCTest_out_2_12$`p-value_min`
QMCTest_out_2_12$`p-value_prod`
# ======= Truth: 1 state - H0: 1 state vs. H1: 2 states (Should fail to reject)
k <- 2
y_out <- simuAR(mdlsimu_k1)
# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_1_12 = LR_MCTest(y_out$y, ar, k-1, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_1_12$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_1_12 = LR_BootTest(y_out$y, ar, k-1, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_1_12$pval
# Dufour & Luger Moment Test
ptm<- proc.time()
DLMCTest_out_1_12 <- DLMCtest(y_out$y, ar , N = 99) 
proc.time() - ptm
DLMCTest_out_1_12$`p-value_min`
DLMCTest_out_1_12$`p-value_prod`
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_1_12 <- QMCtest(y_out$y, ar, k-1, k, N = 99) 
proc.time() - ptm
QMCTest_out_1_12$`p-value_min`
QMCTest_out_1_12$`p-value_prod`
# ======= Truth: 3 state - H0: 2 states vs. H1: 3 states (Should reject)
k <- 3
y_out <- simuMSAR(msmdlsimu_k3, type = "markov")
# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_3_23 = LR_MCTest(y_out$y, ar, k-1, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_3_23$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_3_23 = LR_BootTest(y_out$y, ar, k-1, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_3_23$pval
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_3_23 <- QMCtest(y_out$y, ar, k-1, k, N = 99) 
proc.time() - ptm
QMCTest_out_3_23$`p-value_min`
QMCTest_out_3_23$`p-value_prod`
# ======= Truth: 3 state - H0: 1 state vs. H1: 3 states (Should reject)
k <- 3
y_out <- simuMSAR(msmdlsimu_k3, type = "markov")
# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_3_13 = LR_MCTest(y_out$y, ar, k-2, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_3_13$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_3_13 = LR_BootTest(y_out$y, ar, k-2, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_3_13$pval
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_3_13 <- QMCtest(y_out$y, ar, k-2, k, N = 99) 
proc.time() - ptm
QMCTest_out_3_13$`p-value_min`
QMCTest_out_3_13$`p-value_prod`
# ======= Truth: 2 state - H0: 2 states vs. H1: 3 states (Should fail to reject)
k <- 3
y_out <- simuMSAR(msmdlsimu_k2, type = "markov")
# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_2_23 = LR_MCTest(y_out$y, ar, k-1, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_2_23$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_2_23 = LR_BootTest(y_out$y, ar, k-1, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_2_23$pval
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_2_23 <- QMCtest(y_out$y, ar, k-1, k, N = 99) 
proc.time() - ptm
QMCTest_out_2_23$`p-value_min`
QMCTest_out_2_23$`p-value_prod`
# ======= Truth: 1 state - H0: 1 state vs. H1: 3 states (Should fail to reject)
k <- 3
y_out <- simuAR(mdlsimu_k1)
# Monte Carlo LR Test
ptm <- proc.time()
LRTest_out_1_13 = LR_MCTest(y_out$y, ar, k-2, k, msmu, msvar, N, maxit = 250)
proc.time()-ptm
LRTest_out_1_13$pval
# Bootstrap LR Test
ptm <- proc.time()
LRBTest_out_1_13 = LR_BootTest(y_out$y, ar, k-2, k, msmu, msvar, maxit = 250)
proc.time()-ptm
LRBTest_out_1_13$pval
# Quantile Moment Test
ptm <- proc.time()
QMCTest_out_1_13 <- QMCtest(y_out$y, ar, k-2, k, N = 99) 
proc.time() - ptm
QMCTest_out_1_13$`p-value_min`
QMCTest_out_1_13$`p-value_prod`

proc.time() - ptm2



